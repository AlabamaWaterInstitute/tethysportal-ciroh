global:
  host: ''

replicaCount: 1
strategy: 'Recreate'
# timestamp
image:
  repository: 'awiciroh/tethysapp-ciroh-portal'
  tag: latest
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

gs-cloud:
  enabled: false


thredds:
  enabled: true
  fullnameOverride: 'ciroh-tds'
  thredds_tds_catalog: '/thredds/catalog/ciroh_data/thredds_data/catalog.xml'
  username: 'admin'
  password: 'tdm_pass'
  config_files:
    init_default_config: false
    catalog:
      init_file: false
      file_content: ''
    thredds_config:
      init_file: false
      file_content: ''
    wms_config:
      init_file: false
      file_content: ''
    tomcat_users:
      init_file: false
      file_content: ''
  # Data to be used for the public folder and also for the wms palettes
  data:
    init_default_config: false
    # an example of a data archive is the following https://example.com/some/web/thredds_data.tgz
    public:
      init_data: false
      data_archive: ''
      subpath: 'ggst_thredds_directory'
    wms_palettes:
      # an example of a wmsPalettes archive is the following https://example.com/some/web/wmsPalettes.tgz
      init_data: false
      data_archive:
      subpath: 'wmsPalettes'
  storageClass:
    createClass: false
    storageClassName: ''
  persistentVolumeClaim:
    name: 'thredds-pv-claim'
  env:
    - name: TDM_PW
      value: 'tdm_pass'
    - name: TDS_HOST
      value: 'ciroh-tds'
    - name: THREDDS_XMX_SIZE
      value: '4G'
    - name: THREDDS_XMS_SIZE
      value: '4G'
    - name: TDM_XMX_SIZE
      value: '6G'
    - name: TDM_XMS_SIZE
      value: '1G'
    # - name: 'TOMCAT_USER_ID'
    #   value: '1000'
    # - name: TOMCAT_GROUP_ID
    #   value: '1000'

  storage_size: 2Gi
  resources:
    requests:
      memory: '2Gi'
      cpu: '1'
    limits:
      memory: '4Gi'

postgis:
  fullnameOverride: 'ciroh-db'
  postgres_user: 'postgres'
  postgres_password: 'please_dont_use_default_passwords'
  extra_config:
    max_connections: '500'
    shared_buffers: '512MB'
    work_mem: '5MB'
    autovacuum: 'on'
  service:
    type: ClusterIP
    port: 5432
  storage_size: 5Gi
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 2
      memory: 4Gi
  storageClass:
    storageClassName: ''
redis:
  enabled: true
  fullnameOverride: 'ciroh-redis'
  architecture: standalone
  auth:
    enabled: false

tethys:
  init_containers:
    wait_for_db: false
    env: {}
  volumeMounts: []
  volumes: []
  configMaps: {}
  workspace_size: ''

  env:
    # db-env-variables
    TETHYS_DB_NAME:
      value: tethys_platform
    TETHYS_DB_PORT:
      value: '5432'
    TETHYS_DB_USERNAME:
      value: tethys_default
    TETHYS_DB_PASSWORD:
      value: please_dont_use_default_passwords
    TETHYS_DB_SUPERUSER:
      value: tethys_default
    TETHYS_DB_SUPERUSER_PASS:
      value: please_dont_use_default_passwords
    APP_DB_PORT:
      value: '5432'
    APP_DB_USERNAME:
      value: tethys_super
    APP_DB_PASSWORD:
      value: 'please_dont_use_default_passwords'
    # portal-settings
    PUBLIC_PORTAL_PROTOCOL:
      value: 'https'
    ENABLE_OPEN_PORTAL:
      value: true
    BYPASS_TETHYS_HOME_PAGE:
      value: true
    CHANNEL_LAYERS_BACKEND:
      value: channels_redis.core.RedisChannelLayer
    PORTAL_SUPERUSER_NAME:
      value: admin
    PORTAL_SUPERUSER_EMAIL:
      value: none@none.com
    PORTAL_SUPERUSER_PASSWORD:
      value: pass
    TETHYS_SETTINGS_FLAGS:
      value: '--production, --overwrite'
    TETHYS_PUBLIC_HOST:
      value: 'tethys.ciroh.org'

podAnnotations: {}

podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 80
  annotations: {}

# Note: The first host in the ingress field is used as TETHYS_PUBLIC_HOST, TETHYS_GS_HOST_PUB, and TETHYS_TDS_HOST_PUB.
# This is true EVEN IF the ingress is not enabled!

ingresses:
  enabled: true
  external:
    enabled: true
    className: ''
    annotations: {}
    hosts:
      - host: ''
        paths: []
    tls: []
  static:
    enabled: true
    className: ''
    annotations: {}
    hosts:
      - host: ''
        paths: []
    tls: []

resources:
  requests:
    cpu: 2
    memory: 4Gi
    ephemeral-storage: 3Gi
  limits:
    memory: 6Gi
    ephemeral-storage: 4Gi
nodeSelector: {}
tolerations: []
affinity: {}

storageClass:
  provisioner: ''
  enable: false
  storageClassName: 'ciroh-storage'
  annotations: {}
  reclaimPolicy: Delete
  parameters: {}
  volumeBindingMode: ''
  allowVolumeExpansion: ''
  mountOptions: []

namespace:
  enabled: false
  name: cirohportal
  limits:
    # cpu: '4'
    # memory: 8Gi
    ephemeral_storage: '5Gi'
  requests:
    # cpu: '4'
    # memory: 8Gi
    ephemeral_storage: '5Gi'

hpa:
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 80