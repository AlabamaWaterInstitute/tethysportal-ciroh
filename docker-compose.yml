version: '3.1'
services:
  db:
    image: postgis/postgis:15-3.3
    restart: always
    networks:
      - 'internal'
    ports:
      - '5432:5432'
    env_file:
      - ./env/db.env
    volumes:
      - ./data/psql:/var/lib/postgresql/data

  # data_downloader:
  #   image: python:alpine3.17
  #   build:
  #     context: .
  #     dockerfile: data.Dockerfile
  #   networks:
  #     - 'internal'
  #     - 'external'
  #   volumes:
  #     - ./public_data/ggst:/usr/src/app/ggst

  thredds:
    image: unidata/thredds-docker:latest
    restart: always
    # depends_on:
    #   - 'data_downloader'
    networks:
      - 'internal'
      - 'external'
    ports:
      - '8080:8080'
    env_file:
      - ./env/thredds.env
    volumes:
      - ./data/thredds/:/usr/local/tomcat/content/thredds
      - ./logs/thredds/tomcat/:/usr/local/tomcat/logs/
      - ./logs/thredds/thredds/:/usr/local/tomcat/content/thredds/logs/
      - ./config/thredds/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml
      - ./config/thredds/catalog.xml:/usr/local/tomcat/content/thredds/catalog.xml
      - ./config/thredds/threddsConfig.xml:/usr/local/tomcat/content/thredds/threddsConfig.xml
      # - ./public_data:/usr/local/tomcat/content/thredds/public/
      - ./data/tethys/thredds_data/:/usr/local/tomcat/content/thredds/public/

  redis:
    image: redis:latest
    restart: always
    networks:
      - 'external'
    ports:
      - '6379:6379'

  geoserver:
    image: tethysplatform/geoserver:latest
    restart: always
    networks:
      - 'internal'
      - 'external'
    ports:
      - '8181:8181'
      - '8081:8081'
      - '8082:8082'
      - '8083:8083'
      - '8084:8084'
    env_file:
      - ./env/geoserver.env
    volumes:
      - ./data/geoserver/:/var/geoserver/data

  # scheduler:
  #   image: ghcr.io/dask/dask:latest
  #   hostname: scheduler
  #   restart: always
  #   networks:
  #     - 'internal'
  #     - 'external'
  #   ports:
  #     - '8786:8786'
  #     - '8787:8787'
  #   env_file:
  #     - ./env/dask.env
  #   command:
  #     [
  #       'dask',
  #       'scheduler',
  #       '--preload',
  #       'tethys_dask_scheduler.plugin',
  #       '--tethys-host',
  #       'http://localhost:80',
  #     ]

  # worker:
  #   image: ghcr.io/dask/dask:latest
  #   restart: always
  #   networks:
  #     - 'internal'
  #     - 'external'
  #   # env_file:
  #   #   - ./env/dask.env
  #   command: ['dask', 'worker', 'tcp://scheduler:8786']
  #   # For Docker swarm you can specify multiple workers, this is ignored by `docker-compose up`
  #   deploy:
  #     replicas: 1

  web:
    image: tethys-portal-docker:latest
    build: .
    restart: always
    depends_on:
      - 'db'
      - 'thredds'
      - 'redis'
      # - 'data_downloader'
    networks:
      - 'internal'
      - 'external'
    ports:
      - '80:80'
    env_file:
      - ./env/web.env
    volumes:
      - ./data/tethys:/var/lib/tethys_persist
      - ./logs/tethys:/var/log/tethys
      # - ./public_data:/var/lib/tethys_persist/thredds_data
networks:
  internal:
    internal: true
  external:
