name: push_on_tag

# Push to docker hub if tag has been created.
on:
  push:
    tags:
      - '*'

env:
  TEST_IMAGE: gioelkin/tethys_portal:dev_${GITHUB_SHA}
  DOCKER_HUB_ORG: gioelkin
  DOCKER_REPO: tethys_portal

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Set Env
        run: |
          echo "KANIKO_CACHE_REGISTRY=${{ env.DOCKER_HUB_ORG }}/${{ env.DOCKER_REPO }}-cache" >> $GITHUB_ENV
          echo "KANIKO_IMAGE=${{ env.DOCKER_HUB_ORG }}/${{ env.DOCKER_REPO }}" >> $GITHUB_ENV
      - name: Set Tag
        run: |
          echo "TAG=${GITHUB_REF:10}" >> $GITHUB_ENV
          echo "TAG_LATEST=latest" >> $GITHUB_ENV
      - name: Test Tag
        run: |
          echo $TAG
      - name: build and push tag
        uses: aevea/action-kaniko@master
        with:
          # Docker registry where the image will be pushed
          registry: docker.io
          # Username used for authentication to the Docker registry
          username: ${{ secrets.DOCKER_BUILDER_USERNAME }}
          # Password used for authentication to the Docker registry
          password: ${{ secrets.DOCKER_BUILDER_TOKEN }}
          # Image name
          image: ${{ env.KANIKO_IMAGE }}
          # Image tag
          tag: ${{ env.TAG }}
          # Enables build cache
          cache: true
          # Docker registry meant to be used as cache
          cache_registry: ${{ env.KANIKO_CACHE_REGISTRY }}
          # Dockerfile filename
          build_file: prod.Dockerfile
          extra_args: --use-new-run --compressed-caching=false --snapshotMode=redo --cleanup

      - name: build and push latest
        uses: aevea/action-kaniko@v0.6.1
        with:
          # Docker registry where the image will be pushed
          registry: docker.io
          # Username used for authentication to the Docker registry
          username: ${{ secrets.DOCKER_BUILDER_USERNAME }}
          # Password used for authentication to the Docker registry
          password: ${{ secrets.DOCKER_BUILDER_TOKEN }}
          # Image name
          image: ${{ env.KANIKO_IMAGE }}
          # Image tag
          tag: ${{ env.TAG_LATEST }}
          # Enables build cache
          cache: true
          # Docker registry meant to be used as cache
          cache_registry: ${{ env.KANIKO_CACHE_REGISTRY }}
          # Dockerfile filename
          build_file: prod.Dockerfile
          extra_args: --use-new-run --compressed-caching=false --snapshotMode=redo --cleanup
