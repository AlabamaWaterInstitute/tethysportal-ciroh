# Default values for ciroh.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 'awiciroh/tethysapp-ciroh'
  tag: latest
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

geoserver:
  fullnameOverride: 'ciroh-gs'
  username: 'admin'
  password: 'geoserver'
  init_default_config: false
  env:
    - name: ENABLED_NODES
      value: '4'
    - name: REST_NODES
      value: '1'
    - name: MAX_MEMORY
      value: '1024'
    - name: MIN_MEMORY
      value: '512'
    - name: NUM_CORES
      value: '8'
    - name: MAX_TIMEOUT
      value: '60'
  storage_size: 2Gi
  resources:
    requests:
      memory: '2Gi'
      cpu: '1'
    limits:
      memory: '4Gi'

thredds:
  fullnameOverride: 'ciroh-tds'
  init_default_config: false
  thredds_tds_catalog: '/thredds/catalog/catalog.xml'
  username: 'admin'
  password: 'tdm_pass'
  env:
    - name: TDM_PW
      value: 'tdm_pass'
    - name: TDS_HOST
      value: 'http://localhost'
    - name: THREDDS_XMX_SIZE
      value: '4G'
    - name: THREDDS_XMS_SIZE
      value: '4G'
    - name: TDM_XMX_SIZE
      value: '6G'
    - name: TDM_XMS_SIZE
      value: '1G'
  storage_size: 2Gi
  resources:
    requests:
      memory: '2Gi'
      cpu: '1'
    limits:
      memory: '4Gi'

postgis:
  fullnameOverride: 'ciroh-db'
  postgres_user: 'postgres'
  postgres_password: 'please_dont_use_default_passwords'
  extra_config:
    max_connections: '500'
    shared_buffers: '512MB'
    work_mem: '5MB'
    autovacuum: 'on'
  service:
    type: ClusterIP
    port: 5432
  storage_size: 5Gi
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 2
      memory: 4Gi

tethys:
  workspace_size: '5Gi'
  settings:
    tethys_settings_flags: '--production, --overwrite'
    portal_title: 'CIROH Portal'
    primary_color: '#256291'
    secondary_color: '#7C99AC'
    background_color: '#D7D3C7'
    hero_text: 'Welcome to the CIROH Tethys Portal'
    blurb_text: 'CIROH Tethys platform provides access to a suite of pre-built applications commonly used by the Cooperative Institute for Research to Operations in Hydrology (CIROH) research community. CIROH is a national consortium of science and services partnered with the National Oceanic and Atmospheric Administration’s (NOAA) National Water Center. It aims to advance water prediction – the forecasting of streamflow, extreme events such as floods and droughts, and water quality – and enhance the communitys ability to deal with water-related challenges. This platform works through Amazon Web Services'
    feature_1_heading: 'Tethys Platform'
    feature_1_body: 'Tethys was piloted by implementing web portals for partners of the CIROH and Brigham Young University (BYU). It includes a suite of free, open-source software and is powered by the Django Python web framework.'
    feature_2_heading: 'Applications'
    feature_2_body: 'Tethys is a mega-platform that hosts applications for hydrological and meteorological forecasting, discovery, visualization and download of data related to hydrometeorological variables.'
    feature_3_heading: 'Terms of Use'
    feature_3_body: 'The use of the portal will be carried out under the sole and exclusive responsibility of the user.'
    client_max_body_size: '1G'
    file_upload_max_memory_size: '1073741824'
    nginx_read_time_out: '1800'
    data_upload_max_memory_size: '1073741824'
    copyright: 'Copyright © 2023 CIROH'
    mde_disclaimer: 'CIROH TERMS OF SERVICE'
    mde_disclaimer_message: 'The MDE is a tethys application under the MIT license'
    global_output_directory: '/usr/lib/tethys'
    grace_thredds_catalog: '/thredds/catalog/ciroh_data/ggst/ggst_thredds_directory/catalog.xml'
    earth_username: 'byugrace'
    earth_pass: 'byuGRACE1'
  database:
    tethys_db_name: 'tethys_platform'
    tethys_db_username: 'tethys_default'
    tethys_db_password: 'please_dont_use_default_passwords'
    tethys_db_superuser: 'tethys_super'
    tethys_db_superuser_pass: 'please_dont_use_default_passwords'
    app_db_username: 'tethys_super'
    app_db_password: 'please_dont_use_default_passwords'
  super_user:
    username: 'admin'
    password: 'pass'
    email: 'none@none.com'

podAnnotations: {}

podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 80

# Note: The first host in the ingress field is used as TETHYS_PUBLIC_HOST, TETHYS_GS_HOST_PUB, and TETHYS_TDS_HOST_PUB.
# This is true EVEN IF the ingress is not enabled!

ingress:
  enabled: true
  annotations:
    {
      alb.ingress.kubernetes.io/scheme: internet-facing,
      alb.ingress.kubernetes.io/target-type: instance,
      alb.ingress.kubernetes.io/load-balancer-name: ingress-aws-load-balancer-controller,
      alb.ingress.kubernetes.io/backend-protocol: HTTP,
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]',
    }
  hosts:
    - host: localhost
  tls: []
resources:
  requests:
    cpu: 1
    memory: 512Mi
  limits:
    cpu: 2
    memory: 1Gi
nodeSelector: {}
tolerations: []
affinity: {}
