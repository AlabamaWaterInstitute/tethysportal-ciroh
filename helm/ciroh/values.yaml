# Default values for ciroh.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 'ciroh/tethysapp-ciroh'
  tag: latest
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

geoserver:
  fullnameOverride: 'ciroh-gs'
  username: 'admin'
  password: 'geoserver'
  init_default_config: false
  env:
    - name: ENABLED_NODES
      value: '4'
    - name: REST_NODES
      value: '1'
    - name: MAX_MEMORY
      value: '1024'
    - name: MIN_MEMORY
      value: '512'
    - name: NUM_CORES
      value: '8'
    - name: MAX_TIMEOUT
      value: '60'
  storage_size: 5Gi
  resources:
    requests:
      memory: '5Gi'
      cpu: '8'
    limits:
      memory: '9Gi'

thredds:
  fullnameOverride: 'ciroh-tds'
  init_default_config: false
  env:
    - name: TDM_PW
      value: 'tdm_pass'
    - name: TDS_HOST
      value: 'http://localhost'
    - name: THREDDS_XMX_SIZE
      value: '4G'
    - name: THREDDS_XMS_SIZE
      value: '4G'
    - name: TDM_XMX_SIZE
      value: '6G'
    - name: TDM_XMS_SIZE
      value: '1G'
  storage_size: 5Gi
  resources:
    requests:
      memory: '5Gi'
      cpu: '8'
    limits:
      memory: '9Gi'

postgis:
  fullnameOverride: 'ciroh-db'
  postgres_user: 'postgres'
  postgres_password: 'please_dont_use_default_passwords'
  extra_config:
    max_connections: '500'
    shared_buffers: '512MB'
    work_mem: '5MB'
    autovacuum: 'on'
  service:
    type: ClusterIP
    port: 5432
  storage_size: 5Gi
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 4
      memory: 4Gi

tethys:
  workspace_size: '5Gi'
  settings:
    tethys_settings_flags: '--production, --overwrite'
    portal_title: 'CIROH Portal'
    primary_color: '#256291'
    secondary_color: '#7C99AC'
    background_color: '#D7D3C7'
    hero_text: 'Welcome to the CIROH Tethys Portal'
    blurb_text: 'CIROH Tethys platform provides access to a suite of pre-built applications commonly used by the Cooperative Institute for Research to Operations in Hydrology (CIROH) research community. CIROH is a national consortium of science and services partnered with the National Oceanic and Atmospheric Administration’s (NOAA) National Water Center. It aims to advance water prediction – the forecasting of streamflow, extreme events such as floods and droughts, and water quality – and enhance the communitys ability to deal with water-related challenges. This platform works through Amazon Web Services'
    feature_1_heading: 'Tethys Platform'
    feature_1_body: 'Tethys was piloted by implementing web portals for partners of the CIROH and Brigham Young University (BYU). It includes a suite of free, open-source software and is powered by the Django Python web framework.'
    feature_2_heading: 'Applications'
    feature_2_body: 'Tethys is a mega-platform that hosts applications for hydrological and meteorological forecasting, discovery, visualization and download of data related to hydrometeorological variables.'
    feature_3_heading: 'Terms of Use'
    feature_3_body: 'The use of the portal will be carried out under the sole and exclusive responsibility of the user.'
    client_max_body_size: '1G'
    file_upload_max_memory_size: '1073741824'
    data_upload_max_memory_size: '1073741824'
    copyright: 'Copyright © 2023 CIROH'
  database:
    tethys_db_name: 'tethys_platform'
    tethys_db_username: 'tethys_default'
    tethys_db_password: 'please_dont_use_default_passwords'
    tethys_db_superuser: 'tethys_super'
    tethys_db_superuser_pass: 'please_dont_use_default_passwords'
    app_db_username: 'tethys_super'
    app_db_password: 'please_dont_use_default_passwords'
  super_user:
    username: 'admin'
    password: 'pass'
    email: 'none@none.com'

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# Note: The first host in the ingress field is used as TETHYS_PUBLIC_HOST, TETHYS_GS_HOST_PUB, and TETHYS_TDS_HOST_PUB.
# This is true EVEN IF the ingress is not enabled!

ingress:
  enabled: true
  # className: ''
  annotations: {}
  hosts:
    - host: localhost
    # - host: chart-example.local
    # paths:
    #   - path: /
    #     pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 1
    memory: 512Mi
  limits:
    cpu: 2
    memory: 1Gi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
# targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
